const spreadsheetId = '1DPxfNEfgupBq2ZF7s1pXgvVkKQXBJE-Jn1FlIlwhDbE';
const sheetName = 'test (Responses)';

function doGet() {
  const template = HtmlService.createTemplateFromFile('copilot');
  template.allNames = getAllNames();
  return template.evaluate().setXFrameOptionsMode(HtmlService.XFrameOptionsMode.ALLOWALL);
}

function getAllNames() {
  const ss = SpreadsheetApp.openById(spreadsheetId);
  const sheet = ss.getSheetByName(sheetName);
  const names = sheet.getRange("A2:A" + sheet.getLastRow()).getValues().flat();
  const uniqueNames = [...new Set(names.filter(name => name !== ""))];
  return uniqueNames;
}

function processFormData(identifier, number) {
  const ss = SpreadsheetApp.openById(spreadsheetId);
  const sheet = ss.getSheetByName(sheetName);
  const data = sheet.getRange("A:A").getValues().flat();
  let rowIndex = data.indexOf(identifier) + 1;

  if (rowIndex === 0) {
    rowIndex = data.filter(v => v).length + 1;
    sheet.getRange(rowIndex, 1).setValue(identifier);
  }

  const row = sheet.getRange(rowIndex, 2, 1, 12).getValues()[0];
  let insertCol = row.findIndex(v => v === "");
  if (insertCol === -1) insertCol = row.length;
  sheet.getRange(rowIndex, insertCol + 2).setValue(number);
  zeroFillAllRows(sheet);
  return { success: true };
}

function zeroFillAllRows(sheet) {
  const lastRow = sheet.getLastRow();
  const range = sheet.getRange(2, 2, lastRow - 1, 12).getValues();

  range.forEach((row, i) => {
    let lastIndex = row.length - 1;
    while (lastIndex >= 0 && row[lastIndex] === "") lastIndex--;
    for (let j = 0; j < lastIndex; j++) {
      if (row[j] === "") row[j] = 0;
    }
  });

  sheet.getRange(2, 2, range.length, 12).setValues(range);
}

function searchName(identifier) {
  const ss = SpreadsheetApp.openById(spreadsheetId);
  const sheet = ss.getSheetByName(sheetName);
  const data = sheet.getRange("A2:A" + sheet.getLastRow()).getValues().flat();
  const index = data.indexOf(identifier);
  if (index === -1) return { found: false };

  const row = sheet.getRange(index + 2, 1, 1, 13).getValues()[0];
  return { found: true, data: row };
}
